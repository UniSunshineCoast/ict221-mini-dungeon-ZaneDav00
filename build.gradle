plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0' // This version should be fine
}

group = 'ict221'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.1'
}

java {
    sourceCompatibility = '21' // Make sure your project's JDK is set to Java 21
    targetCompatibility = '21'
}

application {
    // If you DO NOT have a module-info.java file, REMOVE or COMMENT OUT the mainModule line.
    // mainModule = 'dungeon.gui' // For a non-modular project, this line should be removed.

    // Ensure this points to the class with your main(String[] args) method for starting the GUI
    mainClass = 'dungeon.gui.RunGame'
}

javafx {
    version = '21.0.6' // Use a JavaFX version compatible with Java 21. Check for latest patch.
    // E.g., if 21.0.7 is out, use that.
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics'] // Added javafx.graphics
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

testing {
    suites {
        test {
            useJUnitJupiter()
        }
    }
}

// This sourceSets block is generally okay.
// It means Gradle will look for resources (like .fxml files) in both:
// - src/main/java (and exclude .java files from being treated as resources)
// - src/main/resources
// Standard practice is to keep FXML files and other resources primarily in src/main/resources,
// e.g., src/main/resources/dungeon/gui/your_fxml_file.fxml
sourceSets.main {
    java {
        srcDir 'src/main/java'
    }
    resources {
        srcDirs = ['src/main/java', 'src/main/resources']
        exclude "**/*.java"
    }
}
